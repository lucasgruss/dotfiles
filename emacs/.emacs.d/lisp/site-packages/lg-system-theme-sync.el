;;; lg-system-theme-sync.el --- Synchronize the system's theme with emacs  -*- lexical-binding: t; -*-
;;
;; Define a theme-specific propagation of the emacs-theme to the whole desktop
;; environment by providing the following :
;; - a gtk theme
;; - an icon theme
;; - a background image
;;
;; For each field left to nil, the default gtk/icon/background theme is applied
;; with distinction between dark and light themes.

(require 'color)

(defgroup system-theme-sync nil
  "Let your system theme be consistent with emacs' theme")

(defcustom system-theme-sync-default-light-plist '(:background nil :gtk-theme nil :icon-theme nil)
  "Generic settings to apply to light themes.")

(defcustom system-theme-sync-default-dark-plist '(:background nil :gtk-theme nil :icon-theme nil)
  "Generic settings to apply to dark themes.")

(defcustom system-theme-sync-per-theme-settings-plist nil
  "Per theme settings")

(defvar system-theme-sync-theme-hook nil
    "Hook run after a color theme is loaded using `load-theme'.")

(defvar system-theme-sync-current-settings-plist '(:background nil :gtk-theme nil :icon-theme nil)
  "The currently applied settings to synchronize emacs theme and system theme")

(defun system-theme-sync-propagate-theme (theme &rest args)
  "Apply system wide settings that are consistent with the emacs
theme. Suitable gtk and icon themes are applied, and some colors
are changed in the Xresources file.

This function is to be used with xsettingsd, but the same can be
applied to gnome-settings or xfce-conf."
  (let* ((theme "modus-operandi")
	 (settings (or (plist-get system-theme-sync-per-theme-settings-plist theme)
		       (if (color-dark-p (color-name-to-rgb (face-attribute 'default :background)))
			   system-theme-sync-default-dark-plist
			 system-theme-sync-default-light-plist)))
	 (background (plist-get settings :background))
	 (gtk-theme (plist-get settings :gtk-theme))
	 (icon-theme (plist-get settings :icon-theme)))
    (when background
      (efs/run-in-background (format "xfconf-query -c xfce4-desktop -p  /backdrop/screen0/monitoreDP-1/workspace0/last-image -s %s" background))
      (efs/run-in-background (format "xfconf-query -c xfce4-desktop -p  /backdrop/screen0/monitorHDMI-1/workspace0/last-image -s %s" background)))
    (when gtk-theme
      (shell-command (format "sed -i 's/ThemeName.*/ThemeName \"%s\"/g' ~/.xsettingsd" gtk-theme))
      (efs/run-in-background (format "xfconf-query -c xsettings -p /Net/ThemeName -s %s" gtk-theme)))
    (when icon-theme
      (shell-command (format "sed -i 's/IconThemeName.*/IconThemeName \"Papirus-Light\"/g' ~/.xsettingsd" icon-theme))
      (efs/run-in-background (format "xfconf-query -c xsettings -p /Net/IconThemeName -s %s" icon-theme))))
  (efs/run-in-background "killall -HUP xsettingsd")
  (run-hooks 'system-theme-sync-theme-hook))

(define-minor-mode system-theme-sync-mode
  "Synchronize your system theme whenever your emacs theme changes."
  :lighter nil
  :global t
  (if system-theme-sync-mode
      (advice-add 'load-theme :after #'system-theme-sync-propagate-theme '(depth 100))
    (advice-remove 'load-theme #'system-theme-sync-propagate-theme)))

(provide 'lg-system-theme-sync)
